<?php
/**
 * RateRestrictionDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hapi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
* HAPI data model
 *
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
* OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.4
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hapi\Model;

use \ArrayAccess;
use \Hapi\ObjectSerializer;

/**
 * RateRestrictionDto Class Doc Comment
 *
 * @category Class
 * @package  Hapi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RateRestrictionDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RateRestrictionDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'hotel' => '\Hapi\Model\HotelDto',
'dates' => '\Hapi\Model\TimeSpanDto',
'code' => 'string',
'rate_criteria' => 'string',
'room_criteria' => 'string',
'rate_code' => 'string',
'room_type' => 'string',
'days_of_week' => 'string[]',
'number_of_days' => 'int'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'hotel' => null,
'dates' => null,
'code' => null,
'rate_criteria' => null,
'room_criteria' => null,
'rate_code' => null,
'room_type' => null,
'days_of_week' => null,
'number_of_days' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'hotel' => 'hotel',
'dates' => 'dates',
'code' => 'code',
'rate_criteria' => 'rateCriteria',
'room_criteria' => 'roomCriteria',
'rate_code' => 'rateCode',
'room_type' => 'roomType',
'days_of_week' => 'daysOfWeek',
'number_of_days' => 'numberOfDays'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'hotel' => 'setHotel',
'dates' => 'setDates',
'code' => 'setCode',
'rate_criteria' => 'setRateCriteria',
'room_criteria' => 'setRoomCriteria',
'rate_code' => 'setRateCode',
'room_type' => 'setRoomType',
'days_of_week' => 'setDaysOfWeek',
'number_of_days' => 'setNumberOfDays'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'hotel' => 'getHotel',
'dates' => 'getDates',
'code' => 'getCode',
'rate_criteria' => 'getRateCriteria',
'room_criteria' => 'getRoomCriteria',
'rate_code' => 'getRateCode',
'room_type' => 'getRoomType',
'days_of_week' => 'getDaysOfWeek',
'number_of_days' => 'getNumberOfDays'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['hotel'] = isset($data['hotel']) ? $data['hotel'] : null;
        $this->container['dates'] = isset($data['dates']) ? $data['dates'] : null;
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['rate_criteria'] = isset($data['rate_criteria']) ? $data['rate_criteria'] : null;
        $this->container['room_criteria'] = isset($data['room_criteria']) ? $data['room_criteria'] : null;
        $this->container['rate_code'] = isset($data['rate_code']) ? $data['rate_code'] : null;
        $this->container['room_type'] = isset($data['room_type']) ? $data['room_type'] : null;
        $this->container['days_of_week'] = isset($data['days_of_week']) ? $data['days_of_week'] : null;
        $this->container['number_of_days'] = isset($data['number_of_days']) ? $data['number_of_days'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets hotel
     *
     * @return \Hapi\Model\HotelDto
     */
    public function getHotel()
    {
        return $this->container['hotel'];
    }

    /**
     * Sets hotel
     *
     * @param \Hapi\Model\HotelDto $hotel hotel
     *
     * @return $this
     */
    public function setHotel($hotel)
    {
        $this->container['hotel'] = $hotel;

        return $this;
    }

    /**
     * Gets dates
     *
     * @return \Hapi\Model\TimeSpanDto
     */
    public function getDates()
    {
        return $this->container['dates'];
    }

    /**
     * Sets dates
     *
     * @param \Hapi\Model\TimeSpanDto $dates dates
     *
     * @return $this
     */
    public function setDates($dates)
    {
        $this->container['dates'] = $dates;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code current restriction code
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets rate_criteria
     *
     * @return string
     */
    public function getRateCriteria()
    {
        return $this->container['rate_criteria'];
    }

    /**
     * Sets rate_criteria
     *
     * @param string $rate_criteria rate restriction type
     *
     * @return $this
     */
    public function setRateCriteria($rate_criteria)
    {
        $this->container['rate_criteria'] = $rate_criteria;

        return $this;
    }

    /**
     * Gets room_criteria
     *
     * @return string
     */
    public function getRoomCriteria()
    {
        return $this->container['room_criteria'];
    }

    /**
     * Sets room_criteria
     *
     * @param string $room_criteria room restriction type
     *
     * @return $this
     */
    public function setRoomCriteria($room_criteria)
    {
        $this->container['room_criteria'] = $room_criteria;

        return $this;
    }

    /**
     * Gets rate_code
     *
     * @return string
     */
    public function getRateCode()
    {
        return $this->container['rate_code'];
    }

    /**
     * Sets rate_code
     *
     * @param string $rate_code restriction rate code
     *
     * @return $this
     */
    public function setRateCode($rate_code)
    {
        $this->container['rate_code'] = $rate_code;

        return $this;
    }

    /**
     * Gets room_type
     *
     * @return string
     */
    public function getRoomType()
    {
        return $this->container['room_type'];
    }

    /**
     * Sets room_type
     *
     * @param string $room_type restriction room type
     *
     * @return $this
     */
    public function setRoomType($room_type)
    {
        $this->container['room_type'] = $room_type;

        return $this;
    }

    /**
     * Gets days_of_week
     *
     * @return string[]
     */
    public function getDaysOfWeek()
    {
        return $this->container['days_of_week'];
    }

    /**
     * Sets days_of_week
     *
     * @param string[] $days_of_week days of week that apply to restriction
     *
     * @return $this
     */
    public function setDaysOfWeek($days_of_week)
    {
        $this->container['days_of_week'] = $days_of_week;

        return $this;
    }

    /**
     * Gets number_of_days
     *
     * @return int
     */
    public function getNumberOfDays()
    {
        return $this->container['number_of_days'];
    }

    /**
     * Sets number_of_days
     *
     * @param int $number_of_days min or max number of days required by restriction
     *
     * @return $this
     */
    public function setNumberOfDays($number_of_days)
    {
        $this->container['number_of_days'] = $number_of_days;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
