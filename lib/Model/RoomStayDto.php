<?php
/**
 * RoomStayDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hapi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
* HAPI data model
 *
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
* OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.4
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hapi\Model;

use \ArrayAccess;
use \Hapi\ObjectSerializer;

/**
 * RoomStayDto Class Doc Comment
 *
 * @category Class
 * @package  Hapi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RoomStayDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RoomStayDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'room_type' => 'string',
'room_number' => 'string',
'rate_code' => 'string',
'market' => '\Hapi\Model\MarketDto',
'room_count' => 'int',
'source_code' => 'string',
'allotment_code' => 'string',
'payment_method' => 'string',
'comp_yn' => 'string',
'pms_guest_id' => 'string',
'actual_arrival_date' => '\DateTime',
'actual_departure_date' => '\DateTime',
'daily_rates' => '\Hapi\Model\DailyRateDto[]',
'room_rates' => '\Hapi\Model\RoomRateDto[]',
'stay_revenues' => '\Hapi\Model\StayRevenueDto[]',
'daily_revenues' => '\Hapi\Model\DailyRevenueDto[]',
'complimentary_code' => 'string',
'confidential_rate' => 'bool',
'guarantee_info' => '\Hapi\Model\GuaranteeInfoDto',
'channel_code' => 'string',
'reservation_status' => 'string',
'inventory_block_code' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'room_type' => null,
'room_number' => null,
'rate_code' => null,
'market' => null,
'room_count' => null,
'source_code' => null,
'allotment_code' => null,
'payment_method' => null,
'comp_yn' => null,
'pms_guest_id' => null,
'actual_arrival_date' => 'date',
'actual_departure_date' => 'date',
'daily_rates' => null,
'room_rates' => null,
'stay_revenues' => null,
'daily_revenues' => null,
'complimentary_code' => null,
'confidential_rate' => null,
'guarantee_info' => null,
'channel_code' => null,
'reservation_status' => null,
'inventory_block_code' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'room_type' => 'roomType',
'room_number' => 'roomNumber',
'rate_code' => 'rateCode',
'market' => 'market',
'room_count' => 'roomCount',
'source_code' => 'sourceCode',
'allotment_code' => 'allotmentCode',
'payment_method' => 'paymentMethod',
'comp_yn' => 'compYN',
'pms_guest_id' => 'pmsGuestId',
'actual_arrival_date' => 'actualArrivalDate',
'actual_departure_date' => 'actualDepartureDate',
'daily_rates' => 'dailyRates',
'room_rates' => 'roomRates',
'stay_revenues' => 'stayRevenues',
'daily_revenues' => 'dailyRevenues',
'complimentary_code' => 'complimentaryCode',
'confidential_rate' => 'confidentialRate',
'guarantee_info' => 'guaranteeInfo',
'channel_code' => 'channelCode',
'reservation_status' => 'reservationStatus',
'inventory_block_code' => 'inventoryBlockCode'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'room_type' => 'setRoomType',
'room_number' => 'setRoomNumber',
'rate_code' => 'setRateCode',
'market' => 'setMarket',
'room_count' => 'setRoomCount',
'source_code' => 'setSourceCode',
'allotment_code' => 'setAllotmentCode',
'payment_method' => 'setPaymentMethod',
'comp_yn' => 'setCompYn',
'pms_guest_id' => 'setPmsGuestId',
'actual_arrival_date' => 'setActualArrivalDate',
'actual_departure_date' => 'setActualDepartureDate',
'daily_rates' => 'setDailyRates',
'room_rates' => 'setRoomRates',
'stay_revenues' => 'setStayRevenues',
'daily_revenues' => 'setDailyRevenues',
'complimentary_code' => 'setComplimentaryCode',
'confidential_rate' => 'setConfidentialRate',
'guarantee_info' => 'setGuaranteeInfo',
'channel_code' => 'setChannelCode',
'reservation_status' => 'setReservationStatus',
'inventory_block_code' => 'setInventoryBlockCode'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'room_type' => 'getRoomType',
'room_number' => 'getRoomNumber',
'rate_code' => 'getRateCode',
'market' => 'getMarket',
'room_count' => 'getRoomCount',
'source_code' => 'getSourceCode',
'allotment_code' => 'getAllotmentCode',
'payment_method' => 'getPaymentMethod',
'comp_yn' => 'getCompYn',
'pms_guest_id' => 'getPmsGuestId',
'actual_arrival_date' => 'getActualArrivalDate',
'actual_departure_date' => 'getActualDepartureDate',
'daily_rates' => 'getDailyRates',
'room_rates' => 'getRoomRates',
'stay_revenues' => 'getStayRevenues',
'daily_revenues' => 'getDailyRevenues',
'complimentary_code' => 'getComplimentaryCode',
'confidential_rate' => 'getConfidentialRate',
'guarantee_info' => 'getGuaranteeInfo',
'channel_code' => 'getChannelCode',
'reservation_status' => 'getReservationStatus',
'inventory_block_code' => 'getInventoryBlockCode'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['room_type'] = isset($data['room_type']) ? $data['room_type'] : null;
        $this->container['room_number'] = isset($data['room_number']) ? $data['room_number'] : null;
        $this->container['rate_code'] = isset($data['rate_code']) ? $data['rate_code'] : null;
        $this->container['market'] = isset($data['market']) ? $data['market'] : null;
        $this->container['room_count'] = isset($data['room_count']) ? $data['room_count'] : null;
        $this->container['source_code'] = isset($data['source_code']) ? $data['source_code'] : null;
        $this->container['allotment_code'] = isset($data['allotment_code']) ? $data['allotment_code'] : null;
        $this->container['payment_method'] = isset($data['payment_method']) ? $data['payment_method'] : null;
        $this->container['comp_yn'] = isset($data['comp_yn']) ? $data['comp_yn'] : null;
        $this->container['pms_guest_id'] = isset($data['pms_guest_id']) ? $data['pms_guest_id'] : null;
        $this->container['actual_arrival_date'] = isset($data['actual_arrival_date']) ? $data['actual_arrival_date'] : null;
        $this->container['actual_departure_date'] = isset($data['actual_departure_date']) ? $data['actual_departure_date'] : null;
        $this->container['daily_rates'] = isset($data['daily_rates']) ? $data['daily_rates'] : null;
        $this->container['room_rates'] = isset($data['room_rates']) ? $data['room_rates'] : null;
        $this->container['stay_revenues'] = isset($data['stay_revenues']) ? $data['stay_revenues'] : null;
        $this->container['daily_revenues'] = isset($data['daily_revenues']) ? $data['daily_revenues'] : null;
        $this->container['complimentary_code'] = isset($data['complimentary_code']) ? $data['complimentary_code'] : null;
        $this->container['confidential_rate'] = isset($data['confidential_rate']) ? $data['confidential_rate'] : null;
        $this->container['guarantee_info'] = isset($data['guarantee_info']) ? $data['guarantee_info'] : null;
        $this->container['channel_code'] = isset($data['channel_code']) ? $data['channel_code'] : null;
        $this->container['reservation_status'] = isset($data['reservation_status']) ? $data['reservation_status'] : null;
        $this->container['inventory_block_code'] = isset($data['inventory_block_code']) ? $data['inventory_block_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets room_type
     *
     * @return string
     */
    public function getRoomType()
    {
        return $this->container['room_type'];
    }

    /**
     * Sets room_type
     *
     * @param string $room_type Code designating the specific room requested
     *
     * @return $this
     */
    public function setRoomType($room_type)
    {
        $this->container['room_type'] = $room_type;

        return $this;
    }

    /**
     * Gets room_number
     *
     * @return string
     */
    public function getRoomNumber()
    {
        return $this->container['room_number'];
    }

    /**
     * Sets room_number
     *
     * @param string $room_number Room number
     *
     * @return $this
     */
    public function setRoomNumber($room_number)
    {
        $this->container['room_number'] = $room_number;

        return $this;
    }

    /**
     * Gets rate_code
     *
     * @return string
     */
    public function getRateCode()
    {
        return $this->container['rate_code'];
    }

    /**
     * Sets rate_code
     *
     * @param string $rate_code rate_code
     *
     * @return $this
     */
    public function setRateCode($rate_code)
    {
        $this->container['rate_code'] = $rate_code;

        return $this;
    }

    /**
     * Gets market
     *
     * @return \Hapi\Model\MarketDto
     */
    public function getMarket()
    {
        return $this->container['market'];
    }

    /**
     * Sets market
     *
     * @param \Hapi\Model\MarketDto $market market
     *
     * @return $this
     */
    public function setMarket($market)
    {
        $this->container['market'] = $market;

        return $this;
    }

    /**
     * Gets room_count
     *
     * @return int
     */
    public function getRoomCount()
    {
        return $this->container['room_count'];
    }

    /**
     * Sets room_count
     *
     * @param int $room_count room_count
     *
     * @return $this
     */
    public function setRoomCount($room_count)
    {
        $this->container['room_count'] = $room_count;

        return $this;
    }

    /**
     * Gets source_code
     *
     * @return string
     */
    public function getSourceCode()
    {
        return $this->container['source_code'];
    }

    /**
     * Sets source_code
     *
     * @param string $source_code Source code for the source of the rate used in the reservation
     *
     * @return $this
     */
    public function setSourceCode($source_code)
    {
        $this->container['source_code'] = $source_code;

        return $this;
    }

    /**
     * Gets allotment_code
     *
     * @return string
     */
    public function getAllotmentCode()
    {
        return $this->container['allotment_code'];
    }

    /**
     * Sets allotment_code
     *
     * @param string $allotment_code Code of allotment if stay is a part of allotment message
     *
     * @return $this
     */
    public function setAllotmentCode($allotment_code)
    {
        $this->container['allotment_code'] = $allotment_code;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return string
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param string $payment_method Payment Method used in the reservation
     *
     * @return $this
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets comp_yn
     *
     * @return string
     */
    public function getCompYn()
    {
        return $this->container['comp_yn'];
    }

    /**
     * Sets comp_yn
     *
     * @param string $comp_yn compYN used in the reservation
     *
     * @return $this
     */
    public function setCompYn($comp_yn)
    {
        $this->container['comp_yn'] = $comp_yn;

        return $this;
    }

    /**
     * Gets pms_guest_id
     *
     * @return string
     */
    public function getPmsGuestId()
    {
        return $this->container['pms_guest_id'];
    }

    /**
     * Sets pms_guest_id
     *
     * @param string $pms_guest_id pmsGuestId used in the reservation
     *
     * @return $this
     */
    public function setPmsGuestId($pms_guest_id)
    {
        $this->container['pms_guest_id'] = $pms_guest_id;

        return $this;
    }

    /**
     * Gets actual_arrival_date
     *
     * @return \DateTime
     */
    public function getActualArrivalDate()
    {
        return $this->container['actual_arrival_date'];
    }

    /**
     * Sets actual_arrival_date
     *
     * @param \DateTime $actual_arrival_date Actual Arrival Date for the reservation
     *
     * @return $this
     */
    public function setActualArrivalDate($actual_arrival_date)
    {
        $this->container['actual_arrival_date'] = $actual_arrival_date;

        return $this;
    }

    /**
     * Gets actual_departure_date
     *
     * @return \DateTime
     */
    public function getActualDepartureDate()
    {
        return $this->container['actual_departure_date'];
    }

    /**
     * Sets actual_departure_date
     *
     * @param \DateTime $actual_departure_date Actual Departure Date for the reservation
     *
     * @return $this
     */
    public function setActualDepartureDate($actual_departure_date)
    {
        $this->container['actual_departure_date'] = $actual_departure_date;

        return $this;
    }

    /**
     * Gets daily_rates
     *
     * @return \Hapi\Model\DailyRateDto[]
     */
    public function getDailyRates()
    {
        return $this->container['daily_rates'];
    }

    /**
     * Sets daily_rates
     *
     * @param \Hapi\Model\DailyRateDto[] $daily_rates daily_rates
     *
     * @return $this
     */
    public function setDailyRates($daily_rates)
    {
        $this->container['daily_rates'] = $daily_rates;

        return $this;
    }

    /**
     * Gets room_rates
     *
     * @return \Hapi\Model\RoomRateDto[]
     */
    public function getRoomRates()
    {
        return $this->container['room_rates'];
    }

    /**
     * Sets room_rates
     *
     * @param \Hapi\Model\RoomRateDto[] $room_rates room_rates
     *
     * @return $this
     */
    public function setRoomRates($room_rates)
    {
        $this->container['room_rates'] = $room_rates;

        return $this;
    }

    /**
     * Gets stay_revenues
     *
     * @return \Hapi\Model\StayRevenueDto[]
     */
    public function getStayRevenues()
    {
        return $this->container['stay_revenues'];
    }

    /**
     * Sets stay_revenues
     *
     * @param \Hapi\Model\StayRevenueDto[] $stay_revenues stay_revenues
     *
     * @return $this
     */
    public function setStayRevenues($stay_revenues)
    {
        $this->container['stay_revenues'] = $stay_revenues;

        return $this;
    }

    /**
     * Gets daily_revenues
     *
     * @return \Hapi\Model\DailyRevenueDto[]
     */
    public function getDailyRevenues()
    {
        return $this->container['daily_revenues'];
    }

    /**
     * Sets daily_revenues
     *
     * @param \Hapi\Model\DailyRevenueDto[] $daily_revenues daily_revenues
     *
     * @return $this
     */
    public function setDailyRevenues($daily_revenues)
    {
        $this->container['daily_revenues'] = $daily_revenues;

        return $this;
    }

    /**
     * Gets complimentary_code
     *
     * @return string
     */
    public function getComplimentaryCode()
    {
        return $this->container['complimentary_code'];
    }

    /**
     * Sets complimentary_code
     *
     * @param string $complimentary_code complimentary_code
     *
     * @return $this
     */
    public function setComplimentaryCode($complimentary_code)
    {
        $this->container['complimentary_code'] = $complimentary_code;

        return $this;
    }

    /**
     * Gets confidential_rate
     *
     * @return bool
     */
    public function getConfidentialRate()
    {
        return $this->container['confidential_rate'];
    }

    /**
     * Sets confidential_rate
     *
     * @param bool $confidential_rate confidential_rate
     *
     * @return $this
     */
    public function setConfidentialRate($confidential_rate)
    {
        $this->container['confidential_rate'] = $confidential_rate;

        return $this;
    }

    /**
     * Gets guarantee_info
     *
     * @return \Hapi\Model\GuaranteeInfoDto
     */
    public function getGuaranteeInfo()
    {
        return $this->container['guarantee_info'];
    }

    /**
     * Sets guarantee_info
     *
     * @param \Hapi\Model\GuaranteeInfoDto $guarantee_info guarantee_info
     *
     * @return $this
     */
    public function setGuaranteeInfo($guarantee_info)
    {
        $this->container['guarantee_info'] = $guarantee_info;

        return $this;
    }

    /**
     * Gets channel_code
     *
     * @return string
     */
    public function getChannelCode()
    {
        return $this->container['channel_code'];
    }

    /**
     * Sets channel_code
     *
     * @param string $channel_code channel_code
     *
     * @return $this
     */
    public function setChannelCode($channel_code)
    {
        $this->container['channel_code'] = $channel_code;

        return $this;
    }

    /**
     * Gets reservation_status
     *
     * @return string
     */
    public function getReservationStatus()
    {
        return $this->container['reservation_status'];
    }

    /**
     * Sets reservation_status
     *
     * @param string $reservation_status reservation_status
     *
     * @return $this
     */
    public function setReservationStatus($reservation_status)
    {
        $this->container['reservation_status'] = $reservation_status;

        return $this;
    }

    /**
     * Gets inventory_block_code
     *
     * @return string
     */
    public function getInventoryBlockCode()
    {
        return $this->container['inventory_block_code'];
    }

    /**
     * Sets inventory_block_code
     *
     * @param string $inventory_block_code inventory_block_code
     *
     * @return $this
     */
    public function setInventoryBlockCode($inventory_block_code)
    {
        $this->container['inventory_block_code'] = $inventory_block_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
