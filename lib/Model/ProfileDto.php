<?php
/**
 * ProfileDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hapi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
* HAPI data model
 *
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
* OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.4
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hapi\Model;

use \ArrayAccess;
use \Hapi\ObjectSerializer;

/**
 * ProfileDto Class Doc Comment
 *
 * @category Class
 * @package  Hapi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProfileDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProfileDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'profile_guid' => 'string',
'profile_id' => 'string',
'profile_type' => '\Hapi\Model\ProfileType',
'hotel' => '\Hapi\Model\HotelDto',
'name' => '\Hapi\Model\ProfileNameDto',
'date_of_birth' => '\DateTime',
'emails' => '\Hapi\Model\ProfileEmailDto[]',
'phones' => '\Hapi\Model\ProfilePhoneNumberDto[]',
'loyalty_programs' => '\Hapi\Model\LoyaltyProgramDto[]',
'addresses' => '\Hapi\Model\ProfileAddressDto[]',
'repository_record_created' => '\DateTime',
'repository_record_updated' => '\DateTime',
'travel_agent_id' => 'string',
'commission_plan_code' => 'string',
'creator' => 'string',
'created_date' => '\DateTime',
'primary_language' => 'string',
'occupation' => 'string',
'id_documents' => '\Hapi\Model\IdDocumentDto[]',
'contact' => 'string',
'ar_number' => 'string',
'allowed_to_contact_via_email' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'profile_guid' => null,
'profile_id' => null,
'profile_type' => null,
'hotel' => null,
'name' => null,
'date_of_birth' => 'date',
'emails' => null,
'phones' => null,
'loyalty_programs' => null,
'addresses' => null,
'repository_record_created' => 'date-time',
'repository_record_updated' => 'date-time',
'travel_agent_id' => null,
'commission_plan_code' => null,
'creator' => null,
'created_date' => 'date-time',
'primary_language' => null,
'occupation' => null,
'id_documents' => null,
'contact' => null,
'ar_number' => null,
'allowed_to_contact_via_email' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'profile_guid' => 'profileGuid',
'profile_id' => 'profileId',
'profile_type' => 'profileType',
'hotel' => 'hotel',
'name' => 'name',
'date_of_birth' => 'dateOfBirth',
'emails' => 'emails',
'phones' => 'phones',
'loyalty_programs' => 'loyaltyPrograms',
'addresses' => 'addresses',
'repository_record_created' => 'repositoryRecordCreated',
'repository_record_updated' => 'repositoryRecordUpdated',
'travel_agent_id' => 'travelAgentId',
'commission_plan_code' => 'commissionPlanCode',
'creator' => 'creator',
'created_date' => 'createdDate',
'primary_language' => 'primaryLanguage',
'occupation' => 'occupation',
'id_documents' => 'idDocuments',
'contact' => 'contact',
'ar_number' => 'arNumber',
'allowed_to_contact_via_email' => 'allowedToContactViaEmail'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'profile_guid' => 'setProfileGuid',
'profile_id' => 'setProfileId',
'profile_type' => 'setProfileType',
'hotel' => 'setHotel',
'name' => 'setName',
'date_of_birth' => 'setDateOfBirth',
'emails' => 'setEmails',
'phones' => 'setPhones',
'loyalty_programs' => 'setLoyaltyPrograms',
'addresses' => 'setAddresses',
'repository_record_created' => 'setRepositoryRecordCreated',
'repository_record_updated' => 'setRepositoryRecordUpdated',
'travel_agent_id' => 'setTravelAgentId',
'commission_plan_code' => 'setCommissionPlanCode',
'creator' => 'setCreator',
'created_date' => 'setCreatedDate',
'primary_language' => 'setPrimaryLanguage',
'occupation' => 'setOccupation',
'id_documents' => 'setIdDocuments',
'contact' => 'setContact',
'ar_number' => 'setArNumber',
'allowed_to_contact_via_email' => 'setAllowedToContactViaEmail'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'profile_guid' => 'getProfileGuid',
'profile_id' => 'getProfileId',
'profile_type' => 'getProfileType',
'hotel' => 'getHotel',
'name' => 'getName',
'date_of_birth' => 'getDateOfBirth',
'emails' => 'getEmails',
'phones' => 'getPhones',
'loyalty_programs' => 'getLoyaltyPrograms',
'addresses' => 'getAddresses',
'repository_record_created' => 'getRepositoryRecordCreated',
'repository_record_updated' => 'getRepositoryRecordUpdated',
'travel_agent_id' => 'getTravelAgentId',
'commission_plan_code' => 'getCommissionPlanCode',
'creator' => 'getCreator',
'created_date' => 'getCreatedDate',
'primary_language' => 'getPrimaryLanguage',
'occupation' => 'getOccupation',
'id_documents' => 'getIdDocuments',
'contact' => 'getContact',
'ar_number' => 'getArNumber',
'allowed_to_contact_via_email' => 'getAllowedToContactViaEmail'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['profile_guid'] = isset($data['profile_guid']) ? $data['profile_guid'] : null;
        $this->container['profile_id'] = isset($data['profile_id']) ? $data['profile_id'] : null;
        $this->container['profile_type'] = isset($data['profile_type']) ? $data['profile_type'] : null;
        $this->container['hotel'] = isset($data['hotel']) ? $data['hotel'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['date_of_birth'] = isset($data['date_of_birth']) ? $data['date_of_birth'] : null;
        $this->container['emails'] = isset($data['emails']) ? $data['emails'] : null;
        $this->container['phones'] = isset($data['phones']) ? $data['phones'] : null;
        $this->container['loyalty_programs'] = isset($data['loyalty_programs']) ? $data['loyalty_programs'] : null;
        $this->container['addresses'] = isset($data['addresses']) ? $data['addresses'] : null;
        $this->container['repository_record_created'] = isset($data['repository_record_created']) ? $data['repository_record_created'] : null;
        $this->container['repository_record_updated'] = isset($data['repository_record_updated']) ? $data['repository_record_updated'] : null;
        $this->container['travel_agent_id'] = isset($data['travel_agent_id']) ? $data['travel_agent_id'] : null;
        $this->container['commission_plan_code'] = isset($data['commission_plan_code']) ? $data['commission_plan_code'] : null;
        $this->container['creator'] = isset($data['creator']) ? $data['creator'] : null;
        $this->container['created_date'] = isset($data['created_date']) ? $data['created_date'] : null;
        $this->container['primary_language'] = isset($data['primary_language']) ? $data['primary_language'] : null;
        $this->container['occupation'] = isset($data['occupation']) ? $data['occupation'] : null;
        $this->container['id_documents'] = isset($data['id_documents']) ? $data['id_documents'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['ar_number'] = isset($data['ar_number']) ? $data['ar_number'] : null;
        $this->container['allowed_to_contact_via_email'] = isset($data['allowed_to_contact_via_email']) ? $data['allowed_to_contact_via_email'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets profile_guid
     *
     * @return string
     */
    public function getProfileGuid()
    {
        return $this->container['profile_guid'];
    }

    /**
     * Sets profile_guid
     *
     * @param string $profile_guid profile_guid
     *
     * @return $this
     */
    public function setProfileGuid($profile_guid)
    {
        $this->container['profile_guid'] = $profile_guid;

        return $this;
    }

    /**
     * Gets profile_id
     *
     * @return string
     */
    public function getProfileId()
    {
        return $this->container['profile_id'];
    }

    /**
     * Sets profile_id
     *
     * @param string $profile_id profile_id
     *
     * @return $this
     */
    public function setProfileId($profile_id)
    {
        $this->container['profile_id'] = $profile_id;

        return $this;
    }

    /**
     * Gets profile_type
     *
     * @return \Hapi\Model\ProfileType
     */
    public function getProfileType()
    {
        return $this->container['profile_type'];
    }

    /**
     * Sets profile_type
     *
     * @param \Hapi\Model\ProfileType $profile_type profile_type
     *
     * @return $this
     */
    public function setProfileType($profile_type)
    {
        $this->container['profile_type'] = $profile_type;

        return $this;
    }

    /**
     * Gets hotel
     *
     * @return \Hapi\Model\HotelDto
     */
    public function getHotel()
    {
        return $this->container['hotel'];
    }

    /**
     * Sets hotel
     *
     * @param \Hapi\Model\HotelDto $hotel hotel
     *
     * @return $this
     */
    public function setHotel($hotel)
    {
        $this->container['hotel'] = $hotel;

        return $this;
    }

    /**
     * Gets name
     *
     * @return \Hapi\Model\ProfileNameDto
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param \Hapi\Model\ProfileNameDto $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets date_of_birth
     *
     * @return \DateTime
     */
    public function getDateOfBirth()
    {
        return $this->container['date_of_birth'];
    }

    /**
     * Sets date_of_birth
     *
     * @param \DateTime $date_of_birth date_of_birth
     *
     * @return $this
     */
    public function setDateOfBirth($date_of_birth)
    {
        $this->container['date_of_birth'] = $date_of_birth;

        return $this;
    }

    /**
     * Gets emails
     *
     * @return \Hapi\Model\ProfileEmailDto[]
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     *
     * @param \Hapi\Model\ProfileEmailDto[] $emails emails
     *
     * @return $this
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets phones
     *
     * @return \Hapi\Model\ProfilePhoneNumberDto[]
     */
    public function getPhones()
    {
        return $this->container['phones'];
    }

    /**
     * Sets phones
     *
     * @param \Hapi\Model\ProfilePhoneNumberDto[] $phones phones
     *
     * @return $this
     */
    public function setPhones($phones)
    {
        $this->container['phones'] = $phones;

        return $this;
    }

    /**
     * Gets loyalty_programs
     *
     * @return \Hapi\Model\LoyaltyProgramDto[]
     */
    public function getLoyaltyPrograms()
    {
        return $this->container['loyalty_programs'];
    }

    /**
     * Sets loyalty_programs
     *
     * @param \Hapi\Model\LoyaltyProgramDto[] $loyalty_programs loyalty_programs
     *
     * @return $this
     */
    public function setLoyaltyPrograms($loyalty_programs)
    {
        $this->container['loyalty_programs'] = $loyalty_programs;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \Hapi\Model\ProfileAddressDto[]
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \Hapi\Model\ProfileAddressDto[] $addresses addresses
     *
     * @return $this
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets repository_record_created
     *
     * @return \DateTime
     */
    public function getRepositoryRecordCreated()
    {
        return $this->container['repository_record_created'];
    }

    /**
     * Sets repository_record_created
     *
     * @param \DateTime $repository_record_created Record create date in repository, in YYYY-MM-DDThh:mm:ss.sss format
     *
     * @return $this
     */
    public function setRepositoryRecordCreated($repository_record_created)
    {
        $this->container['repository_record_created'] = $repository_record_created;

        return $this;
    }

    /**
     * Gets repository_record_updated
     *
     * @return \DateTime
     */
    public function getRepositoryRecordUpdated()
    {
        return $this->container['repository_record_updated'];
    }

    /**
     * Sets repository_record_updated
     *
     * @param \DateTime $repository_record_updated Record update date in repository, in YYYY-MM-DDThh:mm:ss.sss format
     *
     * @return $this
     */
    public function setRepositoryRecordUpdated($repository_record_updated)
    {
        $this->container['repository_record_updated'] = $repository_record_updated;

        return $this;
    }

    /**
     * Gets travel_agent_id
     *
     * @return string
     */
    public function getTravelAgentId()
    {
        return $this->container['travel_agent_id'];
    }

    /**
     * Sets travel_agent_id
     *
     * @param string $travel_agent_id Travel Agent IATA number
     *
     * @return $this
     */
    public function setTravelAgentId($travel_agent_id)
    {
        $this->container['travel_agent_id'] = $travel_agent_id;

        return $this;
    }

    /**
     * Gets commission_plan_code
     *
     * @return string
     */
    public function getCommissionPlanCode()
    {
        return $this->container['commission_plan_code'];
    }

    /**
     * Sets commission_plan_code
     *
     * @param string $commission_plan_code Commission plan for Travel Agent
     *
     * @return $this
     */
    public function setCommissionPlanCode($commission_plan_code)
    {
        $this->container['commission_plan_code'] = $commission_plan_code;

        return $this;
    }

    /**
     * Gets creator
     *
     * @return string
     */
    public function getCreator()
    {
        return $this->container['creator'];
    }

    /**
     * Sets creator
     *
     * @param string $creator User or interface who created the profile
     *
     * @return $this
     */
    public function setCreator($creator)
    {
        $this->container['creator'] = $creator;

        return $this;
    }

    /**
     * Gets created_date
     *
     * @return \DateTime
     */
    public function getCreatedDate()
    {
        return $this->container['created_date'];
    }

    /**
     * Sets created_date
     *
     * @param \DateTime $created_date Date and Time the profile was created
     *
     * @return $this
     */
    public function setCreatedDate($created_date)
    {
        $this->container['created_date'] = $created_date;

        return $this;
    }

    /**
     * Gets primary_language
     *
     * @return string
     */
    public function getPrimaryLanguage()
    {
        return $this->container['primary_language'];
    }

    /**
     * Sets primary_language
     *
     * @param string $primary_language Primary language of individual
     *
     * @return $this
     */
    public function setPrimaryLanguage($primary_language)
    {
        $this->container['primary_language'] = $primary_language;

        return $this;
    }

    /**
     * Gets occupation
     *
     * @return string
     */
    public function getOccupation()
    {
        return $this->container['occupation'];
    }

    /**
     * Sets occupation
     *
     * @param string $occupation Job title, occupation of guest
     *
     * @return $this
     */
    public function setOccupation($occupation)
    {
        $this->container['occupation'] = $occupation;

        return $this;
    }

    /**
     * Gets id_documents
     *
     * @return \Hapi\Model\IdDocumentDto[]
     */
    public function getIdDocuments()
    {
        return $this->container['id_documents'];
    }

    /**
     * Sets id_documents
     *
     * @param \Hapi\Model\IdDocumentDto[] $id_documents id_documents
     *
     * @return $this
     */
    public function setIdDocuments($id_documents)
    {
        $this->container['id_documents'] = $id_documents;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact Contact info (non-guest profile)
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets ar_number
     *
     * @return string
     */
    public function getArNumber()
    {
        return $this->container['ar_number'];
    }

    /**
     * Sets ar_number
     *
     * @param string $ar_number Accounts receivable number (non-guest profile)
     *
     * @return $this
     */
    public function setArNumber($ar_number)
    {
        $this->container['ar_number'] = $ar_number;

        return $this;
    }

    /**
     * Gets allowed_to_contact_via_email
     *
     * @return bool
     */
    public function getAllowedToContactViaEmail()
    {
        return $this->container['allowed_to_contact_via_email'];
    }

    /**
     * Sets allowed_to_contact_via_email
     *
     * @param bool $allowed_to_contact_via_email allowed_to_contact_via_email
     *
     * @return $this
     */
    public function setAllowedToContactViaEmail($allowed_to_contact_via_email)
    {
        $this->container['allowed_to_contact_via_email'] = $allowed_to_contact_via_email;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
